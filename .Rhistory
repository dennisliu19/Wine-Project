saveName=fileNameRoot , saveType=graphFileType )
#-------------------------------------------------------------------------------
graphics.off()
# Optional generic preliminaries:
graphics.off() # This closes all of R's graphics windows.
#-------------------------------------------------------------------------------
#Load The data file
fileNameRoot = "auxin-"
graphFileType = "eps"
# Specify the column names in the data file relevant to the analysis:
yName="Days"
xBetweenName="Soil"
xWithinName="Deblade"
xSubjectName="Plant"
xBetweenContrasts = list(
list( c("Control") , c("Lanolin") , compVal=0.0 , ROPE=c(-2,2) ) ,
list( c("Lanolin") , c("HighAux") , compVal=0.0 , ROPE=c(-2,2) ) ,
list( c("HighAux") , c("LowAux") , compVal=0.0 , ROPE=c(-2,2) )
)
xWithinContrasts = list(
list( c("Yes") , c("No") , compVal=0.0 , ROPE=c(-2,2) )
)
xBetweenWithinContrasts = list(
list( list( c("Control") , c("Lanolin") ) ,
list(  c("Yes") , c("No") ) ,
compVal=0.0 , ROPE=c(-2,2) ) ,
list( list( c("Control") , c("HighAux") ) ,
list(  c("Yes") , c("No") ) ,
compVal=0.0 , ROPE=c(-2,2) ) ,
list( list( c("Control") , c("LowAux") ) ,
list(  c("Yes") , c("No") ) ,
compVal=0.0 , ROPE=c(-2,2) )
)
#-------------------------------------------------------------------------------
# Load the relevant model into R's working memory:
source("Jags-Ymet-XnomSplitPlot-MnormalHom.R")
#-------------------------------------------------------------------------------
# Generate the MCMC chain:
mcmcCoda = genMCMC( datFrm=auxin ,
yName=yName , xBetweenName=xBetweenName ,
xWithinName=xWithinName , xSubjectName=xSubjectName ,
numSavedSteps=12000 , thinSteps=20 , saveName=fileNameRoot )
#-------------------------------------------------------------------------------
# Display diagnostics of chain, for specified parameters:
parameterNames = varnames(mcmcCoda)
for ( parName in c("mSxW[1,1]","b0","bB[1]","bW[1]","bS[1]","bBxW[1,1]",
"sigma","sigmaB","sigmaW","sigmaS","sigmaBxW") ) {
diagMCMC( codaObject=mcmcCoda , parName=parName ,
saveName=fileNameRoot , saveType=graphFileType )
}
#-------------------------------------------------------------------------------
# Get summary statistics of chain:
summaryInfo = smryMCMC( mcmcCoda ,
datFrm=auxin , xBetweenName=xBetweenName ,
xWithinName=xWithinName , xSubjectName=xSubjectName ,
xBetweenContrasts=xBetweenContrasts ,
xWithinContrasts=xWithinContrasts ,
xBetweenWithinContrasts=xBetweenWithinContrasts ,
saveName=fileNameRoot )
#show(summaryInfo)
# Display posterior information:
plotMCMC( mcmcCoda ,
datFrm=auxin , yName=yName , xBetweenName=xBetweenName ,
xWithinName=xWithinName , xSubjectName=xSubjectName ,
xBetweenContrasts=xBetweenContrasts ,
xWithinContrasts=xWithinContrasts ,
xBetweenWithinContrasts=xBetweenWithinContrasts ,
saveName=fileNameRoot , saveType=graphFileType )
#-------------------------------------------------------------------------------
# Optional generic preliminaries:
graphics.off() # This closes all of R's graphics windows.
#-------------------------------------------------------------------------------
#Load The data file
fileNameRoot = "auxin-"
graphFileType = "eps"
# Specify the column names in the data file relevant to the analysis:
yName="Days"
xBetweenName="Soil"
xWithinName="Deblade"
xSubjectName="Plant"
xBetweenContrasts = list(
list( c("Control") , c("Lanolin") , compVal=0.0 , ROPE=c(-2,2) ) ,
list( c("Lanolin") , c("HighAux") , compVal=0.0 , ROPE=c(-2,2) ) ,
list( c("HighAux") , c("LowAux") , compVal=0.0 , ROPE=c(-2,2) )
)
xWithinContrasts = list(
list( c("Yes") , c("No") , compVal=0.0 , ROPE=c(-2,2) )
)
xBetweenWithinContrasts = list(
list( list( c("Control") , c("Lanolin") ) ,
list(  c("Yes") , c("No") ) ,
compVal=0.0 , ROPE=c(-2,2) ) ,
list( list( c("Control") , c("HighAux") ) ,
list(  c("Yes") , c("No") ) ,
compVal=0.0 , ROPE=c(-2,2) ) ,
list( list( c("Control") , c("LowAux") ) ,
list(  c("Yes") , c("No") ) ,
compVal=0.0 , ROPE=c(-2,2) ) ,
list( list( c("Control") , c("HighAux") ) ,
list(  c("Yes") , c("No") ) ,
compVal=0.0 , ROPE=c(-2,2) )
)
#-------------------------------------------------------------------------------
# Load the relevant model into R's working memory:
source("Jags-Ymet-XnomSplitPlot-MnormalHom.R")
#-------------------------------------------------------------------------------
# Generate the MCMC chain:
mcmcCoda = genMCMC( datFrm=auxin ,
yName=yName , xBetweenName=xBetweenName ,
xWithinName=xWithinName , xSubjectName=xSubjectName ,
numSavedSteps=12000 , thinSteps=20 , saveName=fileNameRoot )
#-------------------------------------------------------------------------------
# Display diagnostics of chain, for specified parameters:
parameterNames = varnames(mcmcCoda)
for ( parName in c("mSxW[1,1]","b0","bB[1]","bW[1]","bS[1]","bBxW[1,1]",
"sigma","sigmaB","sigmaW","sigmaS","sigmaBxW") ) {
diagMCMC( codaObject=mcmcCoda , parName=parName ,
saveName=fileNameRoot , saveType=graphFileType )
}
#-------------------------------------------------------------------------------
# Get summary statistics of chain:
summaryInfo = smryMCMC( mcmcCoda ,
datFrm=auxin , xBetweenName=xBetweenName ,
xWithinName=xWithinName , xSubjectName=xSubjectName ,
xBetweenContrasts=xBetweenContrasts ,
xWithinContrasts=xWithinContrasts ,
xBetweenWithinContrasts=xBetweenWithinContrasts ,
saveName=fileNameRoot )
#show(summaryInfo)
# Display posterior information:
plotMCMC( mcmcCoda ,
datFrm=auxin , yName=yName , xBetweenName=xBetweenName ,
xWithinName=xWithinName , xSubjectName=xSubjectName ,
xBetweenContrasts=xBetweenContrasts ,
xWithinContrasts=xWithinContrasts ,
xBetweenWithinContrasts=xBetweenWithinContrasts ,
saveName=fileNameRoot , saveType=graphFileType )
#-------------------------------------------------------------------------------
# Optional generic preliminaries:
graphics.off() # This closes all of R's graphics windows.
#-------------------------------------------------------------------------------
#Load The data file
fileNameRoot = "auxin-"
graphFileType = "eps"
# Specify the column names in the data file relevant to the analysis:
yName="Days"
xBetweenName="Soil"
xWithinName="Deblade"
xSubjectName="Plant"
xBetweenContrasts = list(
list( c("Control") , c("Lanolin") , compVal=0.0 , ROPE=c(-2,2) ) ,
list( c("Lanolin") , c("HighAux") , compVal=0.0 , ROPE=c(-2,2) ) ,
list( c("HighAux") , c("LowAux") , compVal=0.0 , ROPE=c(-2,2) ),
list( c("Control") , c("HighAux") , compVal=0.0 , ROPE=c(-2,2) )
)
xWithinContrasts = list(
list( c("Yes") , c("No") , compVal=0.0 , ROPE=c(-2,2) )
)
xBetweenWithinContrasts = list(
list( list( c("Control") , c("Lanolin") ) ,
list(  c("Yes") , c("No") ) ,
compVal=0.0 , ROPE=c(-2,2) ) ,
list( list( c("Control") , c("HighAux") ) ,
list(  c("Yes") , c("No") ) ,
compVal=0.0 , ROPE=c(-2,2) ) ,
list( list( c("Control") , c("LowAux") ) ,
list(  c("Yes") , c("No") ) ,
compVal=0.0 , ROPE=c(-2,2) )
)
#-------------------------------------------------------------------------------
# Load the relevant model into R's working memory:
source("Jags-Ymet-XnomSplitPlot-MnormalHom.R")
#-------------------------------------------------------------------------------
# Generate the MCMC chain:
mcmcCoda = genMCMC( datFrm=auxin ,
yName=yName , xBetweenName=xBetweenName ,
xWithinName=xWithinName , xSubjectName=xSubjectName ,
numSavedSteps=12000 , thinSteps=20 , saveName=fileNameRoot )
#-------------------------------------------------------------------------------
# Display diagnostics of chain, for specified parameters:
parameterNames = varnames(mcmcCoda)
for ( parName in c("mSxW[1,1]","b0","bB[1]","bW[1]","bS[1]","bBxW[1,1]",
"sigma","sigmaB","sigmaW","sigmaS","sigmaBxW") ) {
diagMCMC( codaObject=mcmcCoda , parName=parName ,
saveName=fileNameRoot , saveType=graphFileType )
}
#-------------------------------------------------------------------------------
# Get summary statistics of chain:
summaryInfo = smryMCMC( mcmcCoda ,
datFrm=auxin , xBetweenName=xBetweenName ,
xWithinName=xWithinName , xSubjectName=xSubjectName ,
xBetweenContrasts=xBetweenContrasts ,
xWithinContrasts=xWithinContrasts ,
xBetweenWithinContrasts=xBetweenWithinContrasts ,
saveName=fileNameRoot )
#show(summaryInfo)
# Display posterior information:
plotMCMC( mcmcCoda ,
datFrm=auxin , yName=yName , xBetweenName=xBetweenName ,
xWithinName=xWithinName , xSubjectName=xSubjectName ,
xBetweenContrasts=xBetweenContrasts ,
xWithinContrasts=xWithinContrasts ,
xBetweenWithinContrasts=xBetweenWithinContrasts ,
saveName=fileNameRoot , saveType=graphFileType )
#-------------------------------------------------------------------------------
graphics.off()
# Optional generic preliminaries:
graphics.off() # This closes all of R's graphics windows.
#-------------------------------------------------------------------------------
#Load The data file
fileNameRoot = "auxin-"
graphFileType = "eps"
# Specify the column names in the data file relevant to the analysis:
yName="Days"
xBetweenName="Soil"
xWithinName="Deblade"
xSubjectName="Plant"
xBetweenContrasts = list(
list( c("Control") , c("Lanolin") , compVal=0.0 , ROPE=c(-2,2) ) ,
list( c("Lanolin") , c("HighAux") , compVal=0.0 , ROPE=c(-2,2) ) ,
list( c("HighAux") , c("LowAux") , compVal=0.0 , ROPE=c(-2,2) ),
list( c("Control") , c("HighAux") , compVal=0.0 , ROPE=c(-2,2) ),
list( c("Control") , c("LowAux") , compVal=0.0 , ROPE=c(-2,2) ),
)
# Optional generic preliminaries:
graphics.off() # This closes all of R's graphics windows.
#-------------------------------------------------------------------------------
#Load The data file
fileNameRoot = "auxin-"
graphFileType = "eps"
# Specify the column names in the data file relevant to the analysis:
yName="Days"
xBetweenName="Soil"
xWithinName="Deblade"
xSubjectName="Plant"
xBetweenContrasts = list(
list( c("Control") , c("Lanolin") , compVal=0.0 , ROPE=c(-2,2) ) ,
list( c("Lanolin") , c("HighAux") , compVal=0.0 , ROPE=c(-2,2) ) ,
list( c("HighAux") , c("LowAux") , compVal=0.0 , ROPE=c(-2,2) ),
list( c("Control") , c("HighAux") , compVal=0.0 , ROPE=c(-2,2) ),
list( c("Control") , c("LowAux") , compVal=0.0 , ROPE=c(-2,2) )
)
xWithinContrasts = list(
list( c("Yes") , c("No") , compVal=0.0 , ROPE=c(-2,2) )
)
xBetweenWithinContrasts = list(
list( list( c("Control") , c("Lanolin") ) ,
list(  c("Yes") , c("No") ) ,
compVal=0.0 , ROPE=c(-2,2) ) ,
list( list( c("Control") , c("HighAux") ) ,
list(  c("Yes") , c("No") ) ,
compVal=0.0 , ROPE=c(-2,2) ) ,
list( list( c("Control") , c("LowAux") ) ,
list(  c("Yes") , c("No") ) ,
compVal=0.0 , ROPE=c(-2,2) )
)
#-------------------------------------------------------------------------------
# Load the relevant model into R's working memory:
source("Jags-Ymet-XnomSplitPlot-MnormalHom.R")
#-------------------------------------------------------------------------------
# Generate the MCMC chain:
mcmcCoda = genMCMC( datFrm=auxin ,
yName=yName , xBetweenName=xBetweenName ,
xWithinName=xWithinName , xSubjectName=xSubjectName ,
numSavedSteps=12000 , thinSteps=20 , saveName=fileNameRoot )
#-------------------------------------------------------------------------------
# Display diagnostics of chain, for specified parameters:
parameterNames = varnames(mcmcCoda)
for ( parName in c("mSxW[1,1]","b0","bB[1]","bW[1]","bS[1]","bBxW[1,1]",
"sigma","sigmaB","sigmaW","sigmaS","sigmaBxW") ) {
diagMCMC( codaObject=mcmcCoda , parName=parName ,
saveName=fileNameRoot , saveType=graphFileType )
}
#-------------------------------------------------------------------------------
# Get summary statistics of chain:
summaryInfo = smryMCMC( mcmcCoda ,
datFrm=auxin , xBetweenName=xBetweenName ,
xWithinName=xWithinName , xSubjectName=xSubjectName ,
xBetweenContrasts=xBetweenContrasts ,
xWithinContrasts=xWithinContrasts ,
xBetweenWithinContrasts=xBetweenWithinContrasts ,
saveName=fileNameRoot )
#show(summaryInfo)
# Display posterior information:
plotMCMC( mcmcCoda ,
datFrm=auxin , yName=yName , xBetweenName=xBetweenName ,
xWithinName=xWithinName , xSubjectName=xSubjectName ,
xBetweenContrasts=xBetweenContrasts ,
xWithinContrasts=xWithinContrasts ,
xBetweenWithinContrasts=xBetweenWithinContrasts ,
saveName=fileNameRoot , saveType=graphFileType )
#-------------------------------------------------------------------------------
graphics.off()
# Optional generic preliminaries:
graphics.off() # This closes all of R's graphics windows.
#-------------------------------------------------------------------------------
#Load The data file
fileNameRoot = "auxin-"
graphFileType = "eps"
# Specify the column names in the data file relevant to the analysis:
yName="Days"
xBetweenName="Soil"
xWithinName="Deblade"
xSubjectName="Plant"
xBetweenContrasts = list(
list( c("Control") , c("Lanolin") , compVal=0.0 , ROPE=c(-2,2) ) ,
list( c("Control") , c("HighAux") , compVal=0.0 , ROPE=c(-2,2) ),
list( c("Control") , c("LowAux") , compVal=0.0 , ROPE=c(-2,2) )
)
xWithinContrasts = list(
list( c("Yes") , c("No") , compVal=0.0 , ROPE=c(-2,2) )
)
xBetweenWithinContrasts = list(
list( list( c("Control") , c("Lanolin") ) ,
list(  c("Yes") , c("No") ) ,
compVal=0.0 , ROPE=c(-2,2) ) ,
list( list( c("Control") , c("HighAux") ) ,
list(  c("Yes") , c("No") ) ,
compVal=0.0 , ROPE=c(-2,2) ) ,
list( list( c("HighAux") , c("LowAux") ) ,
list(  c("Yes") , c("No") ) ,
compVal=0.0 , ROPE=c(-2,2) )
)
#-------------------------------------------------------------------------------
# Load the relevant model into R's working memory:
source("Jags-Ymet-XnomSplitPlot-MnormalHom.R")
#-------------------------------------------------------------------------------
# Generate the MCMC chain:
mcmcCoda = genMCMC( datFrm=auxin ,
yName=yName , xBetweenName=xBetweenName ,
xWithinName=xWithinName , xSubjectName=xSubjectName ,
numSavedSteps=12000 , thinSteps=20 , saveName=fileNameRoot )
#-------------------------------------------------------------------------------
# Display diagnostics of chain, for specified parameters:
parameterNames = varnames(mcmcCoda)
for ( parName in c("mSxW[1,1]","b0","bB[1]","bW[1]","bS[1]","bBxW[1,1]",
"sigma","sigmaB","sigmaW","sigmaS","sigmaBxW") ) {
diagMCMC( codaObject=mcmcCoda , parName=parName ,
saveName=fileNameRoot , saveType=graphFileType )
}
#-------------------------------------------------------------------------------
# Get summary statistics of chain:
summaryInfo = smryMCMC( mcmcCoda ,
datFrm=auxin , xBetweenName=xBetweenName ,
xWithinName=xWithinName , xSubjectName=xSubjectName ,
xBetweenContrasts=xBetweenContrasts ,
xWithinContrasts=xWithinContrasts ,
xBetweenWithinContrasts=xBetweenWithinContrasts ,
saveName=fileNameRoot )
#show(summaryInfo)
# Display posterior information:
plotMCMC( mcmcCoda ,
datFrm=auxin , yName=yName , xBetweenName=xBetweenName ,
xWithinName=xWithinName , xSubjectName=xSubjectName ,
xBetweenContrasts=xBetweenContrasts ,
xWithinContrasts=xWithinContrasts ,
xBetweenWithinContrasts=xBetweenWithinContrasts ,
saveName=fileNameRoot , saveType=graphFileType )
#-------------------------------------------------------------------------------
graphics.off()
setwd("~/Desktop/Wine-Project")
library("dplyr")
if("manipulate" %in% installed.packages())(install.packages("manipulate"))
if("mosaic" %in% installed.packages())(install.packages("mosaic"))
if("ggpubr" %in% install.packages())(install.packages("ggpubr"))
library(manipulate)
library(mosaic)
library(ggpubr)
winedata <- read.csv("winemag-data_first150k.csv")
countrysummary <- winedata %>%
group_by(country) %>%
summarise(no_rows = length(X))
countrylist <- c("US","Spain","Italy","France","Argentina","Portugal","Chile","Australia")
wineupdate <- filter(winedata, winedata$country %in% countrylist)
varietysummary <- wineupdate %>%
group_by(variety) %>%
summarise(no_rows = length(X))
varietysummary <- varietysummary[order(-varietysummary$no_rows),]
varietyselection <- varietysummary$variety[1:8]
wineupdate <- filter(wineupdate, wineupdate$variety %in% varietyselection)
wineupdate <- mutate(wineupdate, category = ifelse(variety %in% c("Chardonnay","Sauvignon Blanc"),"white","red" ))
wineupdate <- mutate(wineupdate, countrycat = ifelse(country %in% c("US","Argentina","Chile","Australia"),"non-eu","eu"))
ggboxplot(wineupdate, x = "category", y = "points", color = "countrycat",
palette = c("#00AFBB", "#E7B800"))
interaction.plot(wineupdate$category,wineupdate$countrycat,wineupdate$points)
winetruc <- wineupdate[,c(2,5,6,10,12,13)]
winetruc$country <- factor(winetruc$country)
ggboxplot()
#-------------------------------------------------------------------------------
# Load the relevant model into R's working memory:
source("Jags-Ymet-Xnom2fac-MnormalHom.R")
setwd("~/Desktop/Wine-Project")
# Example for Jags-Ymet-Xnom2fac-MnormalHom.R
#-------------------------------------------------------------------------------
# Optional generic preliminaries:
graphics.off() # This closes all of R's graphics windows.
#-------------------------------------------------------------------------------
#Load The data file
fileNameRoot = "wine-"
graphFileType = "eps"
myDataFrame = winetruc
# Specify the column names in the data file relevant to the analysis:
yName="points"
# x1 should be factor with fewer levels, to plot in single pane:
x1Name="category"
x2Name="countrycat"
# Specify desired contrasts.
# Each main-effect contrast is a list of 2 vectors of level names,
# a comparison value (typically 0.0), and a ROPE (which could be NULL):
x1contrasts = list(
list( c("red") , c("white") , compVal=0.0 , ROPE=c(-1,1) )
)
x2contrasts = list(
list( c("eu") , c("non-eu") , compVal=0.0 , ROPE=c(-1,1) )
)
# Each interaction contrast is a list of 2 lists of 2 vectors of level names,
# a comparison value (typically 0.0), and a ROPE (which could be NULL)::
x1x2contrasts = list(
list( list( c("red") , c("white") ) ,
list( c("eu") , c("non-eu") ) ,
compVal=0.0 , ROPE=c(-1,1) )
)
#-------------------------------------------------------------------------------
# Load the relevant model into R's working memory:
source("Jags-Ymet-Xnom2fac-MnormalHom.R")
#-------------------------------------------------------------------------------
# Generate the MCMC chain:
mcmcCoda = genMCMC( datFrm=myDataFrame ,
yName=yName , x1Name=x1Name , x2Name=x2Name ,
numSavedSteps=15000 , thinSteps=5 ,
saveName=fileNameRoot )
#-------------------------------------------------------------------------------
# Display diagnostics of chain, for specified parameters:
parameterNames = varnames(mcmcCoda)
show( parameterNames ) # show all parameter names, for reference
for ( parName in c("b0","b1[1]","b2[1]","b1b2[1,1]","ySigma") ) {
diagMCMC( codaObject=mcmcCoda , parName=parName ,
saveName=fileNameRoot , saveType=graphFileType )
}
#-------------------------------------------------------------------------------
# Get summary statistics of chain:
summaryInfo = smryMCMC( mcmcCoda ,
datFrm=myDataFrame , x1Name=x1Name , x2Name=x2Name ,
x1contrasts=x1contrasts ,
x2contrasts=x2contrasts ,
x1x2contrasts=x1x2contrasts ,
saveName=fileNameRoot )
show(summaryInfo)
# Display posterior information:
plotMCMC( mcmcCoda ,
datFrm=myDataFrame , yName=yName , x1Name=x1Name , x2Name=x2Name ,
x1contrasts=x1contrasts ,
x2contrasts=x2contrasts ,
x1x2contrasts=x1x2contrasts ,
saveName=fileNameRoot , saveType=graphFileType )
graphics.off()
varietyselection
setwd("~/Desktop/Wine-Project")
# Example for Jags-Ymet-Xnom2fac-MnormalHom.R
#-------------------------------------------------------------------------------
# Optional generic preliminaries:
graphics.off() # This closes all of R's graphics windows.
#-------------------------------------------------------------------------------
#Load The data file
fileNameRoot = "wine-oneway-country-"
graphFileType = "eps"
myDataFrame = winetruc
# Specify the column names in the data file relevant to the analysis:
yName="points"
xName="country"
# Specify desired contrasts.
# Each main-effect contrast is a list of 2 vectors of level names,
# a comparison value (typically 0.0), and a ROPE (which could be NULL):
contrasts = list(
list( c("US") , c("Italy","France","Australia","Chile","Argentina","Spain","Portugal") , compVal=0.0 , ROPE=c(-1,1) ),
list( c("Italy") , c("US","France","Australia","Chile","Argentina","Spain","Portugal") , compVal=0.0 , ROPE=c(-1,1) ),
list( c("France") , c("US","Italy","Australia","Chile","Argentina","Spain","Portugal") , compVal=0.0 , ROPE=c(-1,1) ),
list( c("Australia") , c("US","Italy","France","Chile","Argentina","Spain","Portugal") , compVal=0.0 , ROPE=c(-1,1) ),
list( c("Chile") , c("US","Italy","France","Australia","Argentina","Spain","Portugal") , compVal=0.0 , ROPE=c(-1,1) ),
list( c("Argentina") , c("US","Italy","France","Australia","Chile","Spain","Portugal") , compVal=0.0 , ROPE=c(-1,1) ),
list( c("Spain") , c("US","Italy","France","Australia","Chile","Argentina","Portugal") , compVal=0.0 , ROPE=c(-1,1) ),
list( c("Portugal") , c("US","Italy","France","Australia","Chile","Argentina","Spain") , compVal=0.0 , ROPE=c(-1,1) )
)
#-------------------------------------------------------------------------------
# Load the relevant model into R's working memory:
source("Jags-Ymet-Xnom1fac-MnormalHom.R")
#-------------------------------------------------------------------------------
# Generate the MCMC chain:
mcmcCoda = genMCMC( datFrm=myDataFrame , yName=yName , xName=xName ,
numSavedSteps=15000 , thinSteps=10 , saveName=fileNameRoot )
#-------------------------------------------------------------------------------
# Display diagnostics of chain, for specified parameters:
parameterNames = varnames(mcmcCoda)
show( parameterNames ) # show all parameter names, for reference
for ( parName in c("ySigma","b0","b[1]","aSigma") ) {
diagMCMC( codaObject=mcmcCoda , parName=parName ,
saveName=fileNameRoot , saveType=graphFileType )
}
#-------------------------------------------------------------------------------
# Get summary statistics of chain:
summaryInfo = smryMCMC( mcmcCoda ,
datFrm=myDataFrame , xName=xName ,
contrasts=contrasts ,
saveName=fileNameRoot )
# Display posterior information:
plotMCMC( mcmcCoda ,
datFrm=myDataFrame , yName=yName , xName=xName ,
contrasts=contrasts ,
saveName=fileNameRoot , saveType=graphFileType )
#-------------------------------------------------------------------------------
View(varietysummary)
graphics.off()
